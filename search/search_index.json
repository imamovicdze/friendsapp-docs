{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"API Introduction The FriendsApp unifies multiple social interactions of any given social network under one REST API. We leverage HTTP responses codes to indicate different errors. Authentication Authenticate your requests using access token available to every user that is generated in the database. You can authenticate your requests using Authorization HTTP header or by sending access token in query parameters. curl -X POST -H \"Content-Type: application/json\" http://localhost:8181/api/messages?token_api={{token}} Requests All API requests are be made over HTTP with the base url http://localhost:8181/api currelntly localhost. API leverages appropriate HTTP verbs for requests. HTTP Verb Description GET Used for resource retrieval. POST Resource creation or any other non-idempotent operation. PUT Used for idempotent operation as collection replacement etc. PATCH Update resource. Use {\"key\": \"value\"} for property update or create and {\"key\": null} for delete. DELETE Deletes a resource. Responses HTTP status codes are used to communicate result of your request. HTTP Status Code Description 200 OK The request was successful. 201 Created The request was successful and resource was created. 204 No Content The request was successful and resource was deleted. 400 Bad Request When the request could not be understood. 401 Unauthorized Unauthorized request, i.e. missing access token. 403 Forbidden The request is forbidden due to security reasons. 404 Not Found Requested resource cannot be found. 405 Method Not Allowed Requested method was not allowed, some other HTTP method is required. 422 Unprocessable Entity The request was understood but cannot be processed as some validation error might occur. This might also represent an invalid state of the application or other similar problems. 429 Too Many Requests In case you exceed maximum number of requests within given period, you receive this error response for any consequent requests. See Rate Limiting for more details. 502 Bad Gateway In case an underlying API responds with an error. token_api has to be used for authentication on every single endpoint of the REST API.","title":"Introduction"},{"location":"#api-introduction","text":"The FriendsApp unifies multiple social interactions of any given social network under one REST API. We leverage HTTP responses codes to indicate different errors.","title":"API Introduction"},{"location":"#authentication","text":"Authenticate your requests using access token available to every user that is generated in the database. You can authenticate your requests using Authorization HTTP header or by sending access token in query parameters. curl -X POST -H \"Content-Type: application/json\" http://localhost:8181/api/messages?token_api={{token}}","title":"Authentication"},{"location":"#requests","text":"All API requests are be made over HTTP with the base url http://localhost:8181/api currelntly localhost. API leverages appropriate HTTP verbs for requests. HTTP Verb Description GET Used for resource retrieval. POST Resource creation or any other non-idempotent operation. PUT Used for idempotent operation as collection replacement etc. PATCH Update resource. Use {\"key\": \"value\"} for property update or create and {\"key\": null} for delete. DELETE Deletes a resource.","title":"Requests"},{"location":"#responses","text":"HTTP status codes are used to communicate result of your request. HTTP Status Code Description 200 OK The request was successful. 201 Created The request was successful and resource was created. 204 No Content The request was successful and resource was deleted. 400 Bad Request When the request could not be understood. 401 Unauthorized Unauthorized request, i.e. missing access token. 403 Forbidden The request is forbidden due to security reasons. 404 Not Found Requested resource cannot be found. 405 Method Not Allowed Requested method was not allowed, some other HTTP method is required. 422 Unprocessable Entity The request was understood but cannot be processed as some validation error might occur. This might also represent an invalid state of the application or other similar problems. 429 Too Many Requests In case you exceed maximum number of requests within given period, you receive this error response for any consequent requests. See Rate Limiting for more details. 502 Bad Gateway In case an underlying API responds with an error. token_api has to be used for authentication on every single endpoint of the REST API.","title":"Responses"},{"location":"api_reference/","text":"API - User Reference Register POST Request Example, URL: http://localhost:8000/api/register Path Params Parameter Type Description name string Username field for registration required email string Email address of the user required password string(hash) Password field for the user required c_password string(hash) Confirm password field for the user ( might be redudant for just rest api unless javascript/react/vue frontend) required * Response Body Params Parameter Type Description success/failed object The object will contain the next information in the next table. success object definition. Parameter Type Description name string desc email string desc api_token string desc updated_at string desc created_at string desc id string desc Login POST Request Example, URL: http://localhost:8000/api/login Path Params Parameter Type Description email string User email address password string User password credential Response Body Params Parameter Type Description success/failed object The object will contain the next information in the next table. success object definition. Parameter Type Description id type desc name type desc email type desc email_verified_at type desc api_token type desc created_at type desc updated_at type desc List Users GET Request Example, URL: http://localhost:8000/api/users Path Params None - This is the main method that returns all users. Response Body Params Parameter Type Description id string desc name string desc email string desc email_verified_at string desc password string desc api_token string desc remember_token string desc created_at string desc updated_at string desc status boolean desc is_friend boolean Description","title":"User"},{"location":"api_reference/#api-user-reference","text":"","title":"API - User Reference"},{"location":"api_reference/#register","text":"POST Request Example, URL: http://localhost:8000/api/register","title":"Register"},{"location":"api_reference/#path-params","text":"Parameter Type Description name string Username field for registration required email string Email address of the user required password string(hash) Password field for the user required c_password string(hash) Confirm password field for the user ( might be redudant for just rest api unless javascript/react/vue frontend) required *","title":"Path Params"},{"location":"api_reference/#response-body-params","text":"Parameter Type Description success/failed object The object will contain the next information in the next table. success object definition. Parameter Type Description name string desc email string desc api_token string desc updated_at string desc created_at string desc id string desc","title":"Response Body Params"},{"location":"api_reference/#login","text":"POST Request Example, URL: http://localhost:8000/api/login","title":"Login"},{"location":"api_reference/#path-params_1","text":"Parameter Type Description email string User email address password string User password credential","title":"Path Params"},{"location":"api_reference/#response-body-params_1","text":"Parameter Type Description success/failed object The object will contain the next information in the next table. success object definition. Parameter Type Description id type desc name type desc email type desc email_verified_at type desc api_token type desc created_at type desc updated_at type desc","title":"Response Body Params"},{"location":"api_reference/#list-users","text":"GET Request Example, URL: http://localhost:8000/api/users","title":"List Users"},{"location":"api_reference/#path-params_2","text":"None - This is the main method that returns all users.","title":"Path Params"},{"location":"api_reference/#response-body-params_2","text":"Parameter Type Description id string desc name string desc email string desc email_verified_at string desc password string desc api_token string desc remember_token string desc created_at string desc updated_at string desc status boolean desc is_friend boolean Description","title":"Response Body Params"},{"location":"friend_api/","text":"API - Friends Reference Friends GET Request Example, URL: http://localhost:8000/api/friends Path Params None - This is the main method that returns all friends. token: api_token has to be included for authentication and to know which users friends are we getting Response Body Params Parameter Type Description id int desc name string desc email string desc email_verified_at string desc password string desc api_token string desc remember_token string desc created_at string desc updated_at string desc","title":"Friend"},{"location":"friend_api/#api-friends-reference","text":"","title":"API - Friends Reference"},{"location":"friend_api/#friends","text":"GET Request Example, URL: http://localhost:8000/api/friends","title":"Friends"},{"location":"friend_api/#path-params","text":"None - This is the main method that returns all friends. token: api_token has to be included for authentication and to know which users friends are we getting","title":"Path Params"},{"location":"friend_api/#response-body-params","text":"Parameter Type Description id int desc name string desc email string desc email_verified_at string desc password string desc api_token string desc remember_token string desc created_at string desc updated_at string desc","title":"Response Body Params"},{"location":"invite_api/","text":"API - Invite Reference Accept Invite GET Request Example, URL: http://localhost:8000/api/accept/{id} Path Params Parameter Type Description id int ID int for registration required token: api_token has to be included for authentication and to know which users friends are we getting Response Body Params Parameter Type Description main_user type desc friend_id type desc updated_at type desc created_at type desc id type desc Decline Invite GET Request Example, URL: http://localhost:8000/api/decline/{id} Path Params Parameter Type Description id int ID int for registration required token: api_token has to be included for authentication and to know which users friends are we getting Response Body Params Parameter Type Description main_user type desc friend_id type desc updated_at type desc created_at type desc id type desc Get Requests GET Request Example, URL: http://localhost:8000/api/requests Path Params None - This is the main method that returns all requests. note that the api_token has to be included for authentication and to know which users friends are we getting Response Body Params Parameter Type Description requests object The object will contain a list, the next information in the next table. requests object definition, a list of requests with the following parameters. Parameter Type Description id int desc name string desc email string desc email_verified_at string desc password string desc api_token string desc remember_token string desc created_at string desc updated_at string desc Send Request GET Request Example, URL: http://localhost:8000/api/send-request/{id} Path Params Parameter Type Description id int ID int for registration required token: api_token has to be included for authentication and to know which users friends are we getting Response Body Params Parameter Type Description id int This is the request id, which we just created. user_id_sent int desc user_id_receive int desc status string desc updated_at string desc created_at string desc","title":"Invite"},{"location":"invite_api/#api-invite-reference","text":"","title":"API - Invite Reference"},{"location":"invite_api/#accept-invite","text":"GET Request Example, URL: http://localhost:8000/api/accept/{id}","title":"Accept Invite"},{"location":"invite_api/#path-params","text":"Parameter Type Description id int ID int for registration required token: api_token has to be included for authentication and to know which users friends are we getting","title":"Path Params"},{"location":"invite_api/#response-body-params","text":"Parameter Type Description main_user type desc friend_id type desc updated_at type desc created_at type desc id type desc","title":"Response Body Params"},{"location":"invite_api/#decline-invite","text":"GET Request Example, URL: http://localhost:8000/api/decline/{id}","title":"Decline Invite"},{"location":"invite_api/#path-params_1","text":"Parameter Type Description id int ID int for registration required token: api_token has to be included for authentication and to know which users friends are we getting","title":"Path Params"},{"location":"invite_api/#response-body-params_1","text":"Parameter Type Description main_user type desc friend_id type desc updated_at type desc created_at type desc id type desc","title":"Response Body Params"},{"location":"invite_api/#get-requests","text":"GET Request Example, URL: http://localhost:8000/api/requests","title":"Get Requests"},{"location":"invite_api/#path-params_2","text":"None - This is the main method that returns all requests. note that the api_token has to be included for authentication and to know which users friends are we getting","title":"Path Params"},{"location":"invite_api/#response-body-params_2","text":"Parameter Type Description requests object The object will contain a list, the next information in the next table. requests object definition, a list of requests with the following parameters. Parameter Type Description id int desc name string desc email string desc email_verified_at string desc password string desc api_token string desc remember_token string desc created_at string desc updated_at string desc","title":"Response Body Params"},{"location":"invite_api/#send-request","text":"GET Request Example, URL: http://localhost:8000/api/send-request/{id}","title":"Send Request"},{"location":"invite_api/#path-params_3","text":"Parameter Type Description id int ID int for registration required token: api_token has to be included for authentication and to know which users friends are we getting","title":"Path Params"},{"location":"invite_api/#response-body-params_3","text":"Parameter Type Description id int This is the request id, which we just created. user_id_sent int desc user_id_receive int desc status string desc updated_at string desc created_at string desc","title":"Response Body Params"}]}